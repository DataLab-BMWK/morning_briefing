name: Render Morning Briefing

on:
  schedule:
    # Run daily at 7:30 AM Berlin Time (5:30 UTC during summer, 6:30 UTC during winter)
    - cron: '30 5 * * *'  # Summer time (CEST)
  workflow_dispatch: # Allow manual triggering
    inputs:
      send_email:
        description: 'Send email after rendering'
        required: false
        default: true
        type: boolean
      email_recipients:
        description: 'Override email recipients (comma-separated)'
        required: false
        type: string

jobs:
  render:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    outputs:
      pdf_generated: ${{ steps.render.outputs.success }}
      pdf_path: ${{ steps.render.outputs.pdf_path }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.5'
        
    - name: Setup Pandoc
      uses: r-lib/actions/setup-pandoc@v2
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev \
          fontconfig
          
    - name: Install fonts
      run: |
        sudo mkdir -p /usr/share/fonts/truetype/bundesweb
        sudo cp fonts/*.ttf /usr/share/fonts/truetype/bundesweb/
        sudo fc-cache -fv
        fc-list | grep -i bundes || echo "BundesSans fonts installed"
        
    - name: Setup Quarto
      uses: quarto-dev/quarto-actions/setup@v2
      with:
        version: 'release'
        
    - name: Install Typst
      run: |
        curl -fsSL https://typst.community/typst-install/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Restore R package cache
      uses: actions/cache@v4
      with:
        path: ~/.local/share/renv
        key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
        restore-keys: |
          ${{ runner.os }}-renv-
          
    - name: Install R dependencies
      run: |
        R -e "install.packages('renv', repos = c(CRAN = 'https://cloud.r-project.org'))"
        R -e "renv::restore()"
        
    - name: Render Morning Briefing
      id: render
      run: |
        export QUARTO_DENO_DOM_LOG_LEVEL=WARNING
        
        echo "🔄 Starting Morning Briefing render..."
        
        if quarto render morning_briefing.qmd --to typst-pdf; then
          echo "✅ PDF rendered successfully"
          echo "success=true" >> $GITHUB_OUTPUT
          echo "pdf_path=morning_briefing.pdf" >> $GITHUB_OUTPUT
          
          # Get file size for logging
          size=$(du -h morning_briefing.pdf | cut -f1)
          echo "📄 PDF size: $size"
        else
          echo "❌ PDF rendering failed"
          echo "success=false" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: Upload PDF artifact
      if: steps.render.outputs.success == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: morning-briefing-${{ github.run_number }}
        path: morning_briefing.pdf
        retention-days: 30

  email:
    needs: render
    runs-on: ubuntu-latest
    if: >
      always() && 
      needs.render.outputs.pdf_generated == 'true' && 
      (github.event_name == 'schedule' || inputs.send_email == true)
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: morning-briefing-${{ github.run_number }}
        
    - name: Send Morning Briefing via Email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "📊 Morning Briefing - ${{ github.run_date }}"
        to: ${{ inputs.email_recipients || secrets.EMAIL_RECIPIENTS }}
        from: Morning Briefing Bot <${{ secrets.EMAIL_USERNAME }}>
        html_body: |
          <h2>📊 Daily Morning Briefing</h2>
          <p>Guten Morgen!</p>
          
          <p>Hier ist Ihr tagesaktuelles Morning Briefing für den <strong>${{ github.run_date }}</strong>.</p>
          
          <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0;">
            <h3>📋 Inhalt</h3>
            <ul>
              <li>🌍 Globale Finanzindikatoren (DAX, S&P 500, Öl, etc.)</li>
              <li>📅 Wirtschaftskalender Deutschland</li>
              <li>📰 Top 5 Wirtschaftsnachrichten</li>
              <li>🏭 Branchen-News (Chemie, Automotive, Stahl)</li>
            </ul>
          </div>
          
          <p>Das vollständige Morning Briefing finden Sie im Anhang als PDF.</p>
          
          <hr>
          <p><small>
            Automatisch generiert am ${{ github.run_date }} | 
            <a href="https://github.com/${{ github.repository }}">Repository</a>
          </small></p>
        attachments: morning_briefing.pdf
        
    - name: Email Status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Email sent successfully"
        else
          echo "❌ Email sending failed"
        fi

  commit:
    needs: [render, email]
    runs-on: ubuntu-latest
    if: always() && needs.render.outputs.pdf_generated == 'true'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: morning-briefing-${{ github.run_number }}
        
    - name: Commit and push updated PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add morning_briefing.pdf
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          commit_msg="📊 Update Morning Briefing - $(date '+%Y-%m-%d %H:%M')"
          if [ "${{ needs.email.result }}" == "success" ]; then
            commit_msg="$commit_msg ✉️"
          elif [ "${{ needs.email.result }}" == "failure" ]; then
            commit_msg="$commit_msg ❌"
          fi
          
          git commit -m "$commit_msg"
          git push
        fi
